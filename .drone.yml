# kind: pipeline
# type: docker
# name: greeting

# steps:
# - name: en
#   image: alpine
#   commands:
#   - echo hello world
#   when:
#       branch:
#         - master
#       event:
#         - push
#         - pull_request
#         - tag

# - name: fr
#   image: alpine
#   commands:
#   - echo bonjour monde

# kind: pipeline
# name: default
# steps:
#   - name: test
#     image: golang:1.10-alpine
#     commands:
#       - "go test"
#   - name: build
#     image: golang:1.10-alpine
#     commands:
#       - "go build -o ./myapp"
#   - name: publish
#     image: plugins/docker
#     settings:
#       repo: chukwurado/k8scicd
#       tags: [ "${DRONE_COMMIT_SHA:0:7}","latest" ]
#       username:
#         from_secret: docker_username
#       password:
#         from_secret: docker_password

#   - name: deliver
#     image: sinlead/drone-kubectl
#     settings:
#       kubernetes_server:
#         from_secret: k8s_server
#       kubernetes_cert:
#         from_secret: k8s_cert
#       kubernetes_token:
#         from_secret: k8s_token
#     commands:
#       - kubectl apply -f deployment.yml

kind: pipeline
name: default

steps:
  # - name: test
  #   image: node:12.18.1-buster
  #   commands:
  #     - cd client
  #     - npm install
  #     - npm run test

  - name: deploy
    image: google/cloud-sdk:alpine
    environment:
      google_credentials:
        from_secret: google_credentials
    commands:
      # - echo $(gcloud projects describe test-k8s-287319)
      - echo $google_credentials > /tmp/$CI_PIPELINE_ID.json
      - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json

  # - name: deploy
  #   # image: nytimes/drone-gke
  #   environment:
  #     # TOKEN:
  #       from_secret: google_credentials
  #   commands:
  #     - kubectl apply -f k8s